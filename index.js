#!/usr/bin/env node

const args = process.argv;
if (args[2] == '-h' || args[2] == '--help') {
    console.log('env-gen-config');
    console.log('Usage: env-gen-config');
    console.log('Description: Command will read .env file or overridden env variables and will generate env-config.js file');
    console.log('Sample output file (env-config.js):');
    console.log('   windows._env_ = {');
    console.log('       "SERVER": "localhost",');
    console.log('       "USERNAME": "user1",');
    console.log('       "PASSWORD": "p01"');
    console.log('   }');
    console.log('');

} else if (args.length>2) {
    console.log('Unknown arguments! Please use --help to get help.');

} else {

    const fs = require('fs');
    const envFilePath = './.env';
    const configJsonFilePath = './env-config.js';
    try
    {  
        let json = '// Generated by env-gen-config \r\n' +
                'window._env_ = {\r\n';

        if (!fs.existsSync(envFilePath)) {
            console.log(`${envFilePath} file does not exist!`);

        } else {
            const allLines = fs.readFileSync(envFilePath, 'utf8');
            const lines = allLines.split('\n')
                            .map(l => l.endsWith('\n') ? l.substring(0, l.length-1) : l)
                            .map(l => l.split('='))
                            .filter(l => (l[0] ? l[0] : '').trim() != '');
            let i = 0;
            let count = lines.length;
            for (i=0; i<count; i++) {
                const line = lines[i];
                let [varname, varvalue] = line;
                varvalue = process.env[varname] ?? varvalue;

                json += `   "${varname}":"${varvalue}"`;
                if (i<(count-1)) {
                    json +=',\r\n';
                }
            }

            console.log(`${configJsonFilePath} file is succesfully created`);
        }

        json += '\r\n};';

        fs.writeFileSync(configJsonFilePath, json);

    } catch (err) {
        console.error('Error! ', err);
    }
}
